{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-bce803148f1f31a5.js","src/main.ts","src/utils/Options.ts","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","src/utils/EntityManager.ts","src/utils/Vector2.ts","src/utils/App.ts","src/utils/Physics.ts","src/utils/Utils.ts","src/utils/Renderer.ts"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"7dd44675b7a05eb9\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws;\n  try {\n    ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n  } catch (err) {\n    if (err.message) {\n      console.error(err.message);\n    }\n    ws = {};\n  }\n\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n\n        // Dispose all old assets.\n        let processedAssets = {} /*: {|[string]: boolean|} */;\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  ws.onerror = function (e) {\n    if (e.message) {\n      console.error(e.message);\n    }\n  };\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        });\n\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","import { Options } from './utils/Options'\r\nimport { EntityManager } from './utils/EntityManager'\r\nimport { App } from './utils/App'\r\nimport { Vec2 } from './utils/Vector2'\r\n\r\nconst options = new Options({ debug: true })\r\n\r\nconst entityManager = new EntityManager()\r\n\r\nconst app = new App(options, entityManager)\r\n\r\nentityManager.addObstacle( 0, app.canvas.clientHeight - 20, app.canvas.clientWidth, 20)\r\nentityManager.addObstacle(0, 0, 20, app.canvas.clientHeight)\r\nentityManager.addObstacle(app.canvas.clientWidth - 20, 0, 20, app.canvas.clientHeight)\r\nentityManager.addObstacle(0, 0, app.canvas.clientWidth, 20)\r\n\r\napp.init()\r\n\r\nlet lastCallTime = 0\r\n\r\napp.onUpdate = (frameTime: number) => {\r\n    if (frameTime - lastCallTime < 80) return\r\n    if (entityManager.particles.length >= 2000) return\r\n\r\n    lastCallTime = frameTime\r\n\r\n    entityManager.addParticle({\r\n        position: Vec2.new(30, 30),\r\n        velocity: Vec2.new(5, 0),\r\n        color: 'green',\r\n        mass: 1,\r\n        radius: 5,\r\n    })\r\n    entityManager.addParticle({\r\n        position: Vec2.new(60, 30),\r\n        velocity: Vec2.new(5, 0),\r\n        color: 'red',\r\n        mass: 1,\r\n        radius: 5,\r\n    })\r\n    entityManager.addParticle({\r\n        position: Vec2.new(90, 30),\r\n        velocity: Vec2.new(5, 0),\r\n        color: 'blue',\r\n        mass: 1,\r\n        radius: 5,\r\n    })\r\n    entityManager.addParticle({\r\n        position: Vec2.new(120, 30),\r\n        velocity: Vec2.new(5, 0),\r\n        color: 'pink',\r\n        mass: 1,\r\n        radius: 5,\r\n    })\r\n    entityManager.addParticle({\r\n        position: Vec2.new(150, 30),\r\n        velocity: Vec2.new(5, 0),\r\n        color: 'brown',\r\n        mass: 1,\r\n        radius: 5,\r\n    })\r\n}\r\n","export class Options {\r\n    gravity: number\r\n    precalc: { circleAngle: number }\r\n    timeSpeedCoefficient: number\r\n    friction: number\r\n    debug: boolean\r\n    physicsIterations: number\r\n    physicsGridResolution: number\r\n    private static _instance?: Options\r\n\r\n    //FIXME: добавить возможность настраивать вещи налету\r\n    constructor({ debug } : { debug?: boolean }) {\r\n        if (Options._instance) {\r\n            return Options._instance\r\n        }\r\n        Options._instance = this\r\n        this.gravity = 9.8\r\n        this.precalc = { circleAngle: 2 * Math.PI }\r\n        this.timeSpeedCoefficient = 1\r\n        this.physicsIterations = 8\r\n        this.physicsGridResolution = 40\r\n        this.friction = 0.90\r\n        this.debug = !!debug\r\n    }\r\n}\r\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","import { Obstacle, Particle } from '../types/common'\r\nimport { Vec2 } from './Vector2'\r\n\r\nexport class EntityManager {\r\n    readonly particles: Particle[]\r\n    readonly obstacles: Obstacle[]\r\n    private static _instance?: EntityManager\r\n\r\n    constructor() {\r\n        if (EntityManager._instance) {\r\n            return EntityManager._instance\r\n        }\r\n        EntityManager._instance = this\r\n        this.particles = []\r\n        this.obstacles = []\r\n    }\r\n\r\n    addParticle = (props: Omit<Partial<Particle>, 'id'>) => {\r\n        this.particles.push({\r\n            id: this.particles.length,\r\n            mass: props.mass ?? 1,\r\n            radius: props.radius ?? 5,\r\n            color: props.color ?? 'blue',\r\n            position: props.position ?? Vec2.new(0, 0),\r\n            velocity: props.velocity ?? Vec2.new(0, 0),\r\n            relativeVelocity: Vec2.new(0, 0),\r\n        })\r\n    }\r\n\r\n    //TODO: add possibility to create diagonal obstacles\r\n    addObstacle = (x: number, y: number, w: number, h: number) => {\r\n        this.obstacles.push({\r\n            data: [ x, y, w, h ],\r\n        })\r\n    }\r\n}\r\n","import { Vector2 } from '../types/common'\r\n\r\nexport class Vec2 {\r\n\r\n    static new(x?: number, y?: number): Vector2 {\r\n        return {\r\n            x : x ?? 0,\r\n            y : y ?? 0\r\n        }\r\n    }\r\n\r\n    static multiplyScalar({ x, y }: Vector2, num: number): Vector2 {\r\n        return {\r\n            x: x * num,\r\n            y: y * num\r\n        }\r\n    }\r\n\r\n    static add(v1: Vector2, v2: Vector2): Vector2 {\r\n        return {\r\n            x: v1.x + v2.x,\r\n            y: v1.y + v2.y\r\n        }\r\n    }\r\n\r\n    static subtract(v1: Vector2, v2: Vector2): Vector2 {\r\n        return {\r\n            x: v1.x - v2.x,\r\n            y: v1.y - v2.y\r\n        }\r\n    }\r\n\r\n    static dot(v1: Vector2, v2: Vector2): number {\r\n        return v1.x * v2.x + v1.y * v2.y\r\n    }\r\n\r\n    static magnitude({ x, y }: Vector2): number {\r\n        return Math.sqrt(x * x + y * y)\r\n    }\r\n\r\n    static normalize({ x, y }: Vector2): Vector2 {\r\n        const magnitude = Vec2.magnitude({ x, y })\r\n\r\n        return {\r\n            x: x / magnitude,\r\n            y: y / magnitude\r\n        }\r\n    }\r\n\r\n    static collisionNormal(collisionPoint: Vector2, position: Vector2): Vector2 {\r\n        return Vec2.normalize(Vec2.subtract(collisionPoint, position))\r\n    }\r\n\r\n    static reflectFromPoint(collisionPoint: Vector2, position: Vector2, velocity: Vector2): Vector2 {\r\n        const normal = Vec2.collisionNormal(collisionPoint, position)\r\n\r\n        return Vec2.subtract(velocity, Vec2.multiplyScalar(normal, 2 * Vec2.dot(velocity, normal)))\r\n    }\r\n\r\n    static reflectFromNormal(vector: Vector2, normal: Vector2) {\r\n        // v' = v - 2 * (v ∙ n/n ∙ n) * n\r\n        return Vec2.subtract(\r\n            vector,\r\n            Vec2.multiplyScalar(\r\n                normal,\r\n                (2 * Vec2.dot(vector, normal) / Vec2.dot(normal, normal))\r\n            )\r\n        )\r\n    }\r\n\r\n}\r\n","import { Options } from './Options'\r\nimport { EntityManager } from './EntityManager'\r\nimport { Physics } from './Physics'\r\nimport { Renderer } from './Renderer'\r\n\r\nexport class App {\r\n    canvas: HTMLCanvasElement\r\n    context: CanvasRenderingContext2D\r\n    dpr: number\r\n    rawDeltaTime: number\r\n    lastFrameTime: number\r\n    isPaused: boolean\r\n    gridCellHeight: number\r\n    gridCellWidth: number\r\n    onUpdate: (frameTime?: number) => void | null\r\n    private static _instance?: App\r\n    readonly entityManager: EntityManager\r\n    readonly options: Options\r\n\r\n    constructor(options: Options, entityManager: EntityManager) {\r\n        if (App._instance) {\r\n            return App._instance\r\n        }\r\n        App._instance = this\r\n        this.canvas = document.getElementById('canvas') as HTMLCanvasElement\r\n        this.context = this.canvas.getContext('2d')\r\n        this.dpr = window.devicePixelRatio || 1\r\n        this.rawDeltaTime = performance.now()\r\n        this.lastFrameTime = this.rawDeltaTime\r\n        this.isPaused = false\r\n        this.options = options\r\n        this.entityManager = entityManager\r\n        this.gridCellWidth = this.canvas.clientWidth / this.options.physicsGridResolution\r\n        this.gridCellHeight = this.canvas.clientHeight / this.options.physicsGridResolution\r\n        //FIXME: шину событий надо сделать\r\n        this.onUpdate = null\r\n\r\n        this.update = this.update.bind(this)\r\n        this.onPause = this.onPause.bind(this)\r\n    }\r\n\r\n    init() {\r\n        //TODO: сделать в расчётах поправки на дпр\r\n        this.canvas.width = document.body.clientWidth\r\n        this.canvas.height = document.body.clientHeight\r\n        window.addEventListener('click', this.onPause)\r\n        window.requestAnimationFrame(this.update)\r\n\r\n    }\r\n\r\n    update(frameTime: number) {\r\n        this.rawDeltaTime = 1 / 60 * this.options.timeSpeedCoefficient\r\n        this.lastFrameTime = frameTime\r\n\r\n        window.requestAnimationFrame(this.update)\r\n        if (this.isPaused) return\r\n\r\n        this.onUpdate && this.onUpdate(frameTime)\r\n\r\n        Physics.prepareFrame(this.entityManager, this.options, this)\r\n        Renderer.drawFrame(this, this.options, this.entityManager)\r\n    }\r\n\r\n    onPause(){\r\n        this.isPaused = !this.isPaused\r\n    }\r\n\r\n    get deltaTime() {\r\n        return this.rawDeltaTime\r\n    }\r\n\r\n}\r\n","import { Obstacle, PossibleCollisionsData, Vector2 } from '../types/common'\r\nimport { Vec2 } from './Vector2'\r\nimport { Options } from './Options'\r\nimport { App } from './App'\r\nimport { EntityManager } from './EntityManager'\r\nimport { Utils } from './Utils'\r\n\r\nexport class Physics {\r\n    static prepareFrame(entityManager: EntityManager, options: Options, app: App) {\r\n        const iterationsMax = options.physicsIterations\r\n\r\n        /**\r\n         * FIXME: нужно переделать колижен респонсы чтобы они затрагивали только текущий интервал, иначе нельзя будет запараллелить вычисления\r\n         * Сейчас симуляция стабильно работает при радиусе партиклов >5 на моей машине, хотелось бы поменьше.\r\n         * Нужна оптимизация + увеличение итераций физики\r\n         */\r\n        for (let x = 0; x < iterationsMax; x++) {\r\n            //UPD: .fill fills array with references to provided value :(\r\n            const possibleCollisions: PossibleCollisionsData = Utils.createUniformGridOfSize(options.physicsGridResolution)\r\n\r\n            //разбиение на клетки работает, насколько я могу судить.\r\n            //вроде как единственная проблема с текущим алгоритмом - это размер партиклов, если он больше клетки, то смэрть\r\n            for (let i = 0; i < entityManager.particles.length; i++) {\r\n                const {\r\n                    position,\r\n                    id,\r\n                    radius\r\n                } = entityManager.particles[i]\r\n\r\n                const xStart = Utils.clamp(Math.floor((position.x - radius) / app.gridCellWidth), 0, options.physicsGridResolution - 1)\r\n                const xEnd = Utils.clamp(Math.floor((position.x + radius) / app.gridCellWidth), 0, options.physicsGridResolution - 1)\r\n\r\n                const yStart = Utils.clamp(Math.floor((position.y - radius) / app.gridCellHeight), 0, options.physicsGridResolution - 1)\r\n                const yEnd = Utils.clamp(Math.floor((position.y + radius) / app.gridCellHeight), 0, options.physicsGridResolution - 1)\r\n\r\n                possibleCollisions[xStart][yStart].push(id)\r\n\r\n                if (xStart !== xEnd) {\r\n                    possibleCollisions[xEnd][yStart].push(id)\r\n                }\r\n\r\n                if (yEnd !== yStart) {\r\n                    possibleCollisions[xStart][yEnd].push(id)\r\n\r\n                    if (xStart !== xEnd) {\r\n                        possibleCollisions[xEnd][yEnd].push(id)\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < entityManager.particles.length; i++) {\r\n                Physics._resolveObstacleCollisions(i, entityManager, options)\r\n            }\r\n\r\n            Physics._resolveParticleCollisions(entityManager, options, possibleCollisions)\r\n\r\n            for (let i = 0; i <entityManager.particles.length; i++) {\r\n                const {\r\n                    position,\r\n                    velocity\r\n                } = entityManager.particles[i]\r\n\r\n                const newVelocity = Vec2.new(velocity.x, velocity.y + options.gravity)\r\n                const newRelativeVelocity = Physics.getRelativeVelocity(newVelocity, app, iterationsMax)\r\n                const newPosition = Vec2.new(position.x + newRelativeVelocity.x, position.y + newRelativeVelocity.y)\r\n\r\n                entityManager.particles[i] = {\r\n                    ...entityManager.particles[i],\r\n                    velocity: newVelocity,\r\n                    relativeVelocity: newRelativeVelocity,\r\n                    position: newPosition,\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private static _particleIntersectsObstacle(obstacle: Obstacle, position: Vector2, radius: number) {\r\n        const { data: [ rectX, rectY, rectWidth, rectHeight ] } = obstacle\r\n\r\n        const rectHalfWidth = rectWidth / 2\r\n        const rectHalfHeight = rectHeight / 2\r\n\r\n        const rectCenterX = Math.abs(rectX + rectHalfWidth)\r\n        const rectCenterY = Math.abs(rectY + rectHalfHeight)\r\n        const circleDistance = Vec2.new(\r\n            Math.abs(position.x - rectCenterX),\r\n            Math.abs(position.y - rectCenterY)\r\n        )\r\n\r\n        if (circleDistance.x > rectHalfWidth + radius) return false\r\n        if (circleDistance.y > rectHalfHeight + radius) return false\r\n        if (circleDistance.x <= rectHalfWidth) return true\r\n        if (circleDistance.y <= rectHalfHeight) return true\r\n\r\n        const cornerDistanceSquared = (circleDistance.x - rectHalfWidth) * 2 + (circleDistance.y - rectHalfHeight) * 2\r\n\r\n        return cornerDistanceSquared <= radius * 2\r\n    }\r\n\r\n    //FIXME: Separate collision detection from collision response to allow for event listeners\r\n    private static _resolveObstacleCollisions(\r\n        particleIndex: number,\r\n        entityManager: EntityManager,\r\n        options: Options,\r\n    ) {\r\n        for (let i = 0; i < entityManager.obstacles.length; i++) {\r\n\r\n            // eslint-disable-next-line prefer-const\r\n            let { position: newPosition, velocity: newVelocity, radius } = entityManager.particles[particleIndex]\r\n\r\n            if (Physics._particleIntersectsObstacle(entityManager.obstacles[i], newPosition, radius)) {\r\n                const { data: [ rectX, rectY, rectWidth, rectHeight ] } = entityManager.obstacles[i]\r\n\r\n                const obstacleLeftX = rectX\r\n                const obstacleRightX = rectX + rectWidth\r\n                const obstacleTopY = rectY\r\n                const obstacleBottomY = rectY + rectHeight\r\n\r\n                const collisionPoint = Vec2.new(\r\n                    newPosition.x < obstacleLeftX\r\n                        ? obstacleLeftX : newPosition.x > obstacleRightX\r\n                            ? obstacleRightX : newPosition.x,\r\n                    newPosition.y < obstacleTopY\r\n                        ? obstacleTopY : newPosition.y > obstacleBottomY\r\n                            ? obstacleBottomY : newPosition.y\r\n                )\r\n\r\n                const distance = Math.sqrt(\r\n                    Math.pow(collisionPoint.x - newPosition.x, 2)\r\n                    + Math.pow(collisionPoint.y - newPosition.y, 2)\r\n                )\r\n\r\n                const intersectionDepth = radius - distance\r\n\r\n                if (intersectionDepth > 0) {\r\n                    //if particle intersects obstacle, move particle away\r\n\r\n                    const newDx = (newPosition.x - collisionPoint.x) / distance\r\n                    const newDy = (newPosition.y - collisionPoint.y) / distance\r\n\r\n                    /**\r\n                     * 0 / 0 could and should happen,\r\n                     * when particle intersects obstacle exactly aligned with collision point,\r\n                     * which gives NaN (for whatever reason),\r\n                     * skip repositioning in this case\r\n                     */\r\n                    if (isNaN(newDx) || isNaN(newDy)) return\r\n\r\n                    newPosition = Vec2.new(\r\n                        newPosition.x + newDx * intersectionDepth,\r\n                        newPosition.y + newDy * intersectionDepth,\r\n                    )\r\n                }\r\n\r\n                entityManager.particles[particleIndex] = {\r\n                    ...entityManager.particles[particleIndex],\r\n                    position: newPosition,\r\n                    velocity: Physics.applyFriction(\r\n                        Vec2.reflectFromPoint(collisionPoint, newPosition, newVelocity), options\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private static _resolveParticleCollisions(\r\n        entityManager: EntityManager,\r\n        options: Options,\r\n        possibleCollisions: PossibleCollisionsData\r\n    ) {\r\n        possibleCollisions.forEach((column) => {\r\n            column.forEach((row) => {\r\n                row.forEach((particleIndex) => {\r\n                    // eslint-disable-next-line prefer-const\r\n                    let { position: newPosition, velocity: newVelocity, radius } = entityManager.particles[particleIndex]\r\n\r\n                    row.forEach((anotherParticleIndex) => {\r\n                        if (anotherParticleIndex === particleIndex) return\r\n\r\n                        // eslint-disable-next-line prefer-const\r\n                        let { position: cPosition, velocity: cVelocity, radius: cRadius} = entityManager.particles[anotherParticleIndex]\r\n\r\n                        const distanceX = cPosition.x - newPosition.x\r\n                        const distanceY = cPosition.y - newPosition.y\r\n                        const centerDistance = Math.sqrt(distanceX * distanceX + distanceY * distanceY)\r\n\r\n                        if (centerDistance < radius * 2) {\r\n                            //check if particles intersect\r\n                            const intersectionDepth = radius + cRadius - centerDistance\r\n\r\n                            //if they intersect, move them apart evenly\r\n                            if (intersectionDepth > 0) {\r\n                                const newDx = distanceX / centerDistance\r\n                                const newDy = distanceY / centerDistance\r\n\r\n                                newPosition = Vec2.new(\r\n                                    newPosition.x - newDx * intersectionDepth / 2,\r\n                                    newPosition.y - newDy * intersectionDepth / 2,\r\n                                )\r\n\r\n                                cPosition = Vec2.new(\r\n                                    cPosition.x + newDx * intersectionDepth / 2,\r\n                                    cPosition.y + newDy * intersectionDepth / 2,\r\n                                )\r\n                            }\r\n\r\n                            const collisionPoint = Vec2.add(\r\n                                Vec2.multiplyScalar(newPosition, radius / (radius + radius)),\r\n                                Vec2.multiplyScalar(cPosition, cRadius / (cRadius + cRadius))\r\n                            )\r\n\r\n                            entityManager.particles[particleIndex] = {\r\n                                ...entityManager.particles[particleIndex],\r\n                                position: newPosition,\r\n                                velocity: Physics.applyFriction(\r\n                                    Vec2.reflectFromPoint(collisionPoint, cPosition, newVelocity),\r\n                                    options\r\n                                )\r\n                            }\r\n\r\n                            entityManager.particles[anotherParticleIndex] = {\r\n                                ...entityManager.particles[anotherParticleIndex],\r\n                                position: cPosition,\r\n                                velocity: Physics.applyFriction(\r\n                                    Vec2.reflectFromPoint(collisionPoint, newPosition, cVelocity),\r\n                                    options\r\n                                )\r\n                            }\r\n                        }\r\n                    })\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    static applyFriction(v: Vector2, options: Options): Vector2 {\r\n        return Vec2.multiplyScalar(v, options.friction)\r\n    }\r\n\r\n    static getRelativeVelocity(v: Vector2, app: App, iterationsMax: number): Vector2 {\r\n        return {\r\n            x: v.x * app.deltaTime / iterationsMax,\r\n            y: v.y * app.deltaTime / iterationsMax\r\n        }\r\n    }\r\n}\r\n","import { PossibleCollisionsData } from '../types/common'\r\n\r\nexport class Utils {\r\n    static clamp(num: number, min: number, max: number) {\r\n        return Math.min(Math.max(num, min), max)\r\n    }\r\n\r\n    static createUniformGridOfSize(size: number): PossibleCollisionsData {\r\n        const grid = []\r\n        for (let i = 0; i < size; i++) {\r\n            grid[i] = []\r\n            for (let y = 0; y < size; y++) {\r\n                grid[i][y] = []\r\n            }\r\n        }\r\n\r\n        return grid\r\n    }\r\n}\r\n","import { App } from './App'\r\nimport { Options } from './Options'\r\nimport { EntityManager } from './EntityManager'\r\nimport { Obstacle } from '../types/common'\r\n\r\nexport class Renderer {\r\n    static drawFrame(app: App, options: Options, entityManager: EntityManager) {\r\n        app.context.clearRect(0, 0, app.canvas.width, app.canvas.height)\r\n        entityManager.particles.forEach(({ position, color, radius }) => {\r\n            app.context.beginPath()\r\n            app.context.fillStyle = color\r\n            app.context.arc(position.x, position.y, radius, 0, options.precalc.circleAngle)\r\n            app.context.fill()\r\n        })\r\n        this._drawObstacles(app, entityManager.obstacles)\r\n        if (options.debug) {\r\n            this._drawDebugInfo(app, entityManager)\r\n        }\r\n    }\r\n\r\n    private static _drawDebugInfo(app: App, entityManager: EntityManager) {\r\n        app.context.fillStyle = 'black'\r\n        app.context.fillText(String(entityManager.particles.length), 10, 10)\r\n\r\n        // TODO: для каждого партикла\r\n        // app.context.fillStyle = 'black'\r\n        // app.context.fillText(String(id), position.x, position.y)\r\n\r\n        const { gridCellWidth, gridCellHeight } = app\r\n\r\n        //FIXME: make grid resolution choosable\r\n        for (let i = 0; i <= app.options.physicsGridResolution; i++) {\r\n            app.context.strokeStyle = 'lightgreen'\r\n            app.context.beginPath()\r\n            app.context.moveTo((i + 1) * gridCellWidth, 0)\r\n            app.context.lineTo((i + 1) * gridCellWidth, app.canvas.clientHeight)\r\n            app.context.stroke()\r\n\r\n            app.context.beginPath()\r\n            app.context.moveTo( 0, (i + 1) * gridCellHeight)\r\n            app.context.lineTo(app.canvas.clientWidth, (i + 1) * gridCellHeight )\r\n            app.context.stroke()\r\n\r\n            app.context.fillText(`${i}, ${i}`, (i) * gridCellWidth, (i) * gridCellHeight)\r\n        }\r\n    }\r\n\r\n    private static _drawObstacles(app: App, obstacles: Obstacle[]) {\r\n        app.context.fillStyle = 'grey'\r\n        obstacles.forEach(({ data }) => {\r\n            app.context.fillRect(...data)\r\n        })\r\n    }\r\n}\r\n"],"names":[],"version":3,"file":"index.b7a05eb9.js.map","sourceRoot":"/__parcel_source_root/"}